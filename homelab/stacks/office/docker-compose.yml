version: "3.9"

services:
  # =========================
  # NEXTCLOUD (linuxserver)
  # =========================
  nextcloud:
    image: lscr.io/linuxserver/nextcloud:latest
    container_name: nextcloud
    depends_on:
      - nextcloud-db
      - nextcloud-redis
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      # Optional tuning for PHP memory, upload limits, etc.:
      # - PHP_MEMORY_LIMIT=1024M
      # - PHP_UPLOAD_LIMIT=10G
    volumes:
      - "${NEXTCLOUD_CONFIG_DIR:-${BASE_PATH}/config/nextcloud}:/config"
      - "${NEXTCLOUD_DATA_PATH:-${BASE_PATH}/media/nextcloud}:/data"
    ports:
      # linuxserver/nextcloud serves HTTPS on 443 and HTTP on 80 inside the container.
      - "${NEXTCLOUD_HTTP_PORT:-8080}:443"
      # If you also want HTTP exposed, uncomment the next line:
      # - "8081:80"
    networks:
      - bridge
    restart: unless-stopped

  nextcloud-db:
    image: postgres:16
    container_name: nextcloud-db
    environment:
      - POSTGRES_DB=${POSTGRES_DB_NEXTCLOUD:-nextcloud}
      - POSTGRES_USER=${POSTGRES_USER_NEXTCLOUD:-nextcloud}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_NEXTCLOUD}
    volumes:
      - "${NEXTCLOUD_DB_DATA:-${BASE_PATH}/nextcloud/postgres}:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER_NEXTCLOUD:-nextcloud} -d ${POSTGRES_DB_NEXTCLOUD:-nextcloud}"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - bridge
    restart: unless-stopped

  nextcloud-redis:
    image: redis:alpine
    container_name: nextcloud-redis
    command: ["redis-server", "--appendonly", "yes"]
    # If you set REDIS_PASSWORD_NEXTCLOUD, enable auth:
    # command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD_NEXTCLOUD}"]
    volumes:
      - "${NEXTCLOUD_REDIS_DATA:-${BASE_PATH}/nextcloud/redis}:/data"
    networks:
      - bridge
    restart: unless-stopped

  # =========================
  # IMMICH (photo/video hub)
  # =========================
  immich-proxy:
    image: ghcr.io/immich-app/immich-proxy:v2.0.1
    container_name: immich-proxy
    depends_on:
      - immich-server
    environment:
      - TZ=${TZ}
      - IMMICH_SERVER_URL=http://immich-server:3001
    ports:
      - "${IMMICH_PORT:-2283}:2283"
    networks:
      - bridge
    restart: unless-stopped

  immich-server:
    image: ghcr.io/immich-app/immich-server:v2.0.1
    container_name: immich-server
    depends_on:
      - immich-db
      - immich-redis
    environment:
      - TZ=${TZ}
      - LOG_LEVEL=${IMMICH_LOG_LEVEL:-info}
      - JWT_SECRET=${JWT_SECRET}
      - UPLOAD_LOCATION=${UPLOAD_LOCATION:-${BASE_PATH}/immich/library}
      - DB_HOST=${DB_HOST:-immich-db}
      - DB_PORT=${DB_PORT:-5432}
      - DB_USERNAME=${DB_USERNAME:-immich}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE_NAME=${DB_DATABASE_NAME:-immich}
      - REDIS_HOST=${REDIS_HOST:-immich-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - "${UPLOAD_LOCATION:-${BASE_PATH}/immich/library}:/usr/src/app/upload"
      - "${IMMICH_CACHE_DIR:-${BASE_PATH}/immich/cache}:/cache"
      # Optional one-time/bulk import mount:
      - "${IMMICH_IMPORT_DIR:-${BASE_PATH}/immich/import}:/import:ro"
    networks:
      - bridge
    restart: unless-stopped

  immich-machine-learning:
    image: ghcr.io/immich-app/immich-machine-learning:release
    container_name: immich-ml
    environment:
      - TZ=${TZ}
      - LOG_LEVEL=${IMMICH_LOG_LEVEL:-info}
      - TRANSFORMERS_CACHE=/cache
    depends_on:
      - immich-server
    volumes:
      - "${IMMICH_CACHE_DIR:-${BASE_PATH}/immich/cache}:/cache"
    networks:
      - bridge
    restart: unless-stopped

  immich-db:
    # Postgres with required extensions for Immich
    image: ghcr.io/immich-app/immich-postgres:15
    container_name: immich-db
    environment:
      - POSTGRES_USER=${DB_USERNAME:-immich}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE_NAME:-immich}
    volumes:
      - "${IMMICH_DB_DATA:-${BASE_PATH}/immich/postgres}:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-immich} -d ${DB_DATABASE_NAME:-immich}"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - bridge
    restart: unless-stopped

  immich-redis:
    image: redis:alpine
    container_name: immich-redis
    command: ["redis-server", "--appendonly", "yes"]
    # If you set REDIS_PASSWORD, enable auth:
    # command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD}"]
    volumes:
      - "${IMMICH_REDIS_DATA:-${BASE_PATH}/immich/redis}:/data"
    networks:
      - bridge
    restart: unless-stopped

networks:
  bridge:
    driver: bridge